version: '2.1'

volumes:
    mongo-data:

services:
  mongo:
      image: mongo
      restart: always
      volumes:
        - 'mongo-data:/data/db'
      expose:
        - "27017"
  twilio-block:
    depends_on:
      - mongo
    container_name: twilio-block
    build: ./twilio-block
    restart: always
    env_file:
      - ./twilio-block/config.env
    ports:
      - "80:3003" # external/internal
    # volumes:
    #   - /hi-dolly-twilio:/usr/src/app/hi-dolly-twilio
    # hi-dolly-mqqt:
    #   build: eclipse-mosquitto:1.6.5
    #   ports:
    #     - "1883:1883"
    #   restart: always

  # hi-dolly-dalle-generate:
  #   depends_on:
  #     - mongo
  #   container_name: hi-dolly-dalle-generate
  #   build: ./VQGAN-CLIP-Docker
  #   command: python -m scripts.generate -c /configs/docker.json
  #   environment:
  #     - DEVICE=cuda
    # volumes:
    #   - /models:/models
    #   - /configs:/configs
    #   - /core:/app/core
    #   - /scripts:/app/scripts
    #   - /outputs:/outputs
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]


  # hi-dolly-dalle-train:
  #   container_name: hi-dolly-dalle-train
  #   build: ./VQGAN-CLIP-Docker
  #   command: python -m scripts.train -c /configs/models/vqgan_custom_docker.json
  #   volumes:
  #     - ./VQGAN-CLIP-Docker/models:/models
  #     - ./VQGAN-CLIP-Docker/configs:/configs
  #     - ./VQGAN-CLIP-Docker/core:/app/core
  #     - ./VQGAN-CLIP-Docker/scripts:/app/scripts
  #     - ./VQGAN-CLIP-Docker/outputs:/outputs
  #   environment:
  #     - DEVICE=cuda
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - capabilities: [gpu]

    # connector:
  #   image: balenablocks/connector:latest
  #   restart: always
  #   labels:
  #     io.balena.features.balena-api: '1'    # necessary to discover services
  #     io.balena.features.supervisor-api: 1  # necessary to discover services in local mode
  #   privileged: true # necessary to change container hostname
  #   ports:
  #     - "8080" # only necessary if using ExternalHttpListener (see below)

  # influxdb:
  #   image: influxdb@sha256:73f876e0c3bd02900f829d4884f53fdfffd7098dd572406ba549eed955bf821f
  #   container_name: influxdb
  #   restart: always
